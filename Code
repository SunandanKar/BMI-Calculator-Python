import tkinter as tk
from tkinter import ttk
import matplotlib.pyplot as plt

# Function to calculate BMI
def calculate_bmi():
    try:
        weight = float(weight_entry.get())
        height = float(height_entry.get())
        if weight <= 0 or height <= 0:
            raise ValueError("Weight and height must be positive numbers.")

        bmi = weight / (height * height)
        bmi_category = classify_bmi(bmi)
        result_display.config(text=f"BMI: {bmi:.2f} ({bmi_category})")

        # Store data
        save_data(weight, height, bmi)
    except ValueError as e:
        result_display.config(text=str(e))

# Function to classify BMI into categories
def classify_bmi(bmi):
    if bmi < 18.5:
        return "Underweight"
    elif 18.5 <= bmi < 25:
        return "Normal weight"
    elif 25 <= bmi < 30:
        return "Overweight"
    else:
        return "Obese"

# Function to save data
def save_data(weight, height, bmi):
    with open("bmi_data.txt", "a") as file:
        file.write(f"Weight: {weight}, Height: {height}, BMI: {bmi}\n")

# GUI Setup
root = tk.Tk()
root.title("BMI Calculator")

font_style = ("Helvetica", 12)

weight_label = ttk.Label(root, text="Weight (kg):", font=font_style)
weight_label.grid(row=0, column=0, padx=10, pady=5)
weight_entry = ttk.Entry(root, font=font_style, width=15)
weight_entry.grid(row=0, column=1, padx=10, pady=5)

height_label = ttk.Label(root, text="Height (m):", font=font_style)
height_label.grid(row=1, column=0, padx=10, pady=5)
height_entry = ttk.Entry(root, font=font_style, width=15)
height_entry.grid(row=1, column=1, padx=10, pady=5)

calculate_button = ttk.Button(root, text="Calculate BMI", command=calculate_bmi, style='TButton')
calculate_button.grid(row=2, columnspan=2, padx=10, pady=10)

result_display = ttk.Label(root, text="", font=font_style)
result_display.grid(row=3, columnspan=2, padx=10, pady=5)

# Data Visualization (basic example)
def visualize_data():
    weights = []
    heights = []
    with open("bmi_data.txt", "r") as file:
        for line in file:
            data = line.split(",")
            weights.append(float(data[0].split(":")[1]))
            heights.append(float(data[1].split(":")[1]))
    plt.scatter(heights, weights)
    plt.xlabel('Height (m)')
    plt.ylabel('Weight (kg)')
    plt.title('BMI Data Visualization')
    plt.show()

visualize_button = ttk.Button(root, text="Visualize Data", command=visualize_data, style='TButton')
visualize_button.grid(row=4, columnspan=2, padx=10, pady=10)

root.mainloop()
